AT THE BEGINNING OF EACH INTERVIEW

READ THIS:

“I will paste an endless series of increasingly difficult challenges 
into the editor. Your task is to figure them out as best as you can, 
and remember that we're looking for qualities beyond how many 
questions you get through, such as technical communication and 
engineering best practices.

Feel free to use any online resources that you normally would, 
e.g. Google, Stack Overflow, documentation pages. Just don't look up 
the solution directly. And when you do look something up, let me know 
what you are looking up so I can understand your thought process. 
There are no penalties for looking things up.

There are also no penalties for errors, so don't be afraid to run your 
code with an expected outcome and use any error messages to your 
advantage in refactoring to get the desired outcome.

Remember the importance of testing your code as some of the problems 
will build on each other, so you want to make sure it works before 
moving on.

Also, be sure to verbalize your thought process, as your technical 
communication is something we're looking for. As you're thinking 
through it, be sure to keep me updated on your overall strategy. 
This will help me to assess how you might work in a pair programming 
session or group environment.

Lastly, I'm not able to give any technical feedback today, but you 
will receive feedback and the result of your interview directly from 
an Admissions Team Member within one week. We'll spend the last few 
minutes of the interview on any non-technical questions you may have. 
Do you have any questions now regarding the format of the interview?”

NEXT, CONFIRM THE FOLLOWING:

Cohort start date:
Interview #
Candidate Location:

INTERVIEW BEGINS:
Send them the link to their CS Bin page: 
http://csbin.io/interview/INTERVIEWEE-NAME

The break down of questions given to interviewees should be as follows:
1 level 1 question
2 level 2 questions
2 level 3 questions
2 level 4 questions

***************************************************************
**LEVEL 1 CHALLENGES**
Problem A: addNumbers
Time: 0:00

+/- reads prompt clearly but technical overcommunication, explaining difference between let and const and what a variable is
- not reading longer prompt out loud
- pretty inconsistent communication but getting better after I explain that I just want to hear how she'll solve the problems
- returning with each iteration of the for loop
--> definitely not strong enough JavaScript skills so going to do some pair programming


***************************************************************
**LEVEL 2 CHALLENGES**
Problem A: passAllTests
Time: 13:00

between50And500
- has good sense of basic syntax but doesn't know terms for things like && or ||.
+ testing function

divBy100
+ good understanding of % operator
- uses weakly equal operator == not best practice

negativeOrEven
- not reading the prompt shows room for growth in terms of formulating an approach through logic. she jumps immediately into code after 30s or so of silence

passAllTests
- pretty stuck here, walked her through this problem and got to revisit parts to check for comprehension

Problem C: isPalindrome
Time: 42:00
+ declaring unneeded variables instead of chainging methods but pretty good at transforming strings
+ pretty strong here, maybe she's gained confidence

***************************************************************


**FREEFLOW QUESTIONS**


What is a callback? What is a higher-order function?
- callback is a func that helps you not to repeat yourself
- not sure about HOF

Can you describe closure to me?
+ deals with scope, some variables get saved inside a function

What is the difference between map, forEach, and a regular loop?
+ doesn't know map, for loop is used with array to repeat a task, tells me about for...in loops

***************************************************************

SCORE: 6/6/8/5/6


